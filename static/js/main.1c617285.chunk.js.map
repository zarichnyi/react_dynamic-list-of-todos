{"version":3,"sources":["api.js","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["getAll","fetch","then","response","json","TodoList","todos","handleSelect","selectedFilter","className","htmlFor","type","name","onChange","event","target","value","map","item","key","id","checked","completed","title","userId","CurrentUser","App","state","todosFromServer","selectedUserId","componentDidMount","a","getTodos","setState","data","filter","prevState","this","console","log","React","Component","ReactDOM","render","document","getElementById"],"mappings":"+WAGO,SAASA,IACd,OAAOC,MAHI,wCAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,U,UCFlBC,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAuBC,GAA1B,EAAUC,eAAV,EAA0BD,cAA1B,OACtB,yBAAKE,UAAU,YACb,sCACA,8BACE,2BAAOC,QAAQ,UAAf,SAEE,2BAAOC,KAAK,OAAOC,KAAK,YAE1B,+BACE,4BACEC,SAAU,SAAAC,GAAK,OAAIP,EAAaO,EAAMC,OAAOC,SAE7C,4BAAQA,MAAM,OAAd,iBAGA,4BAAQA,MAAM,aAAd,aAGA,4BAAQA,MAAM,iBAAd,oBAMN,yBAAKP,UAAU,4BACb,wBAAIA,UAAU,kBACXH,EAAMW,KAAI,SAAAC,GAAI,OACb,wBACET,UAAU,2CACVU,IAAKD,EAAKE,IAEV,+BACE,2BAAOT,KAAK,WAAWU,QAASH,EAAKI,YACrC,2BAAIJ,EAAKK,QAGX,4BACEd,UAAU,iEAKVE,KAAK,UANP,YASGO,EAAKM,gBC7CPC,G,MAAc,kBACzB,yBAAKhB,UAAU,eACb,wBAAIA,UAAU,sBAAqB,mDAEnC,wBAAIA,UAAU,qBAAd,gBACA,uBAAGA,UAAU,sBAAb,qBACA,uBAAGA,UAAU,sBAAb,0BC0DWiB,E,4MA3DbC,MAAQ,CACNC,gBAAiB,GACjBtB,MAAO,GACPuB,eAAgB,EAChBrB,eAAgB,O,EAGlBsB,kB,sBAAoB,4BAAAC,EAAA,sEACK/B,IADL,OACZgC,EADY,OAGlB,EAAKC,SAAS,CACZL,gBAAiBI,EAASE,KACvBC,QAAO,SAAAjB,GAAI,OAAIA,EAAKK,OAASL,EAAKE,IAAMF,EAAKM,UAEhDlB,MAAO0B,EAASE,KAAKC,QAAO,SAAAjB,GAAI,OAAIA,EAAKK,OAASL,EAAKE,IAAMF,EAAKM,YAPlD,2C,EAWpBjB,aAAe,SAACO,GACA,cAAVA,EACF,EAAKmB,UAAS,SAAAG,GAAS,MAAK,CAC1B9B,MAAO8B,EAAUR,gBAAgBO,QAAO,SAAAjB,GAAI,OAAIA,EAAKI,iBAEpC,kBAAVR,EACT,EAAKmB,UAAS,SAAAG,GAAS,MAAK,CAC1B9B,MAAO8B,EAAUR,gBAAgBO,QAAO,SAAAjB,GAAI,OAAKA,EAAKI,iBAGxD,EAAKW,UAAS,SAAAG,GAAS,MAAK,CAC1B9B,MAAO8B,EAAUR,qB,uDAKb,IAAD,EAC2CS,KAAKV,MAA/CrB,EADD,EACCA,MAAOuB,EADR,EACQA,eAAgBrB,EADxB,EACwBA,eAE/B,OACE,yBAAKC,UAAU,OACZ6B,QAAQC,IAAIF,KAAKV,MAAMrB,OACxB,yBAAKG,UAAU,gBACb,kBAAC,EAAD,CACEH,MAAOA,EACPC,aAAc8B,KAAK9B,aACnBC,eAAgBA,KAGpB,yBAAKC,UAAU,gBACb,yBAAKA,UAAU,0BACZoB,EACC,kBAAC,EAAD,CAAaL,OAAQK,IACnB,0B,GApDEW,IAAMC,WCHxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.1c617285.chunk.js","sourcesContent":["\nconst API_URL = `https://mate-api.herokuapp.com/todos`;\n\nexport function getAll() {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\n// const init = async() => {\n//   const result = await getAll();\n//   console.log(result);\n// }\n\n// init();\n","import React from 'react';\nimport './TodoList.scss';\n\nexport const TodoList = ({ todos, selectedFilter, handleSelect }) => (\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n    <form>\n      <label htmlFor=\"filter\">\n        Filter\n        <input type=\"text\" name=\"filter\" />\n      </label>\n      <label>\n        <select\n          onChange={event => handleSelect(event.target.value)}\n        >\n          <option value=\"All\">\n            Choose a type\n          </option>\n          <option value=\"Completed\">\n            Completed\n          </option>\n          <option value=\"Not completed\">\n            Not completed\n          </option>\n        </select>\n      </label>\n    </form>\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(item => (\n          <li\n            className=\"TodoList__item TodoList__item--unchecked\"\n            key={item.id}\n          >\n            <label>\n              <input type=\"checkbox\" checked={item.completed} />\n              <p>{item.title}</p>\n            </label>\n\n            <button\n              className=\"\n              TodoList__user-button\n              TodoList__user-button--selected\n              button\n            \"\n              type=\"button\"\n            >\n              User&nbsp;#\n              {item.userId}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './CurrentUser.scss';\n\nexport const CurrentUser = () => (\n  <div className=\"CurrentUser\">\n    <h2 className=\"CurrentUser__title\"><span>Selected user: 2</span></h2>\n\n    <h3 className=\"CurrentUser__name\">Ervin Howell</h3>\n    <p className=\"CurrentUser__email\">Shanna@melissa.tv</p>\n    <p className=\"CurrentUser__phone\">010-692-6593 x09125</p>\n  </div>\n);\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { getAll } from './api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    todosFromServer: [],\n    todos: [],\n    selectedUserId: 0,\n    selectedFilter: 'All',\n  };\n\n  componentDidMount = async() => {\n    const getTodos = await getAll();\n\n    this.setState({\n      todosFromServer: getTodos.data\n        .filter(item => item.title && item.id && item.userId),\n\n      todos: getTodos.data.filter(item => item.title && item.id && item.userId),\n    });\n  }\n\n  handleSelect = (event) => {\n    if (event === 'Completed') {\n      this.setState(prevState => ({\n        todos: prevState.todosFromServer.filter(item => item.completed),\n      }));\n    } else if (event === 'Not completed') {\n      this.setState(prevState => ({\n        todos: prevState.todosFromServer.filter(item => !item.completed),\n      }));\n    } else {\n      this.setState(prevState => ({\n        todos: prevState.todosFromServer,\n      }));\n    }\n  }\n\n  render() {\n    const { todos, selectedUserId, selectedFilter } = this.state;\n\n    return (\n      <div className=\"App\">\n        {console.log(this.state.todos)}\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            handleSelect={this.handleSelect}\n            selectedFilter={selectedFilter}\n          />\n        </div>\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser userId={selectedUserId} />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}