{"version":3,"sources":["api.js","components/TodoList/TodoList.jsx","components/CurrentUser/CurrentUser.jsx","App.jsx","index.js"],"names":["getAll","fetch","then","response","json","getUser","userId","TodoList","todos","handleSelect","handleFilter","viewUser","onChecked","className","htmlFor","type","name","onChange","event","target","value","map","item","key","id","readOnly","checked","completed","title","onClick","CurrentUser","state","currentUser","loadUser","a","props","user","setState","data","this","clearUser","email","phone","React","Component","App","todosFromServer","todosForFilter","selectedUserId","componentDidMount","getTodos","filter","prevState","includes","handleChecked","todoId","todo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8bff6b03.chunk.js","sourcesContent":["\nconst API_URL = `https://mate-api.herokuapp.com/todos`;\n\nconst USERS_URL = `https://mate-api.herokuapp.com/users/`;\n\nexport function getAll() {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport function getUser(userId) {\n  return fetch(`${USERS_URL}/${userId}/`)\n    .then(response => response.json());\n}\n","import React from 'react';\nimport './TodoList.scss';\nimport PropTypes from 'prop-types';\n\nexport const TodoList = ({\n  todos,\n  handleSelect,\n  handleFilter,\n  viewUser,\n  onChecked,\n}) => (\n\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n    <form>\n      <label htmlFor=\"filter\">\n        Filter\n        <input\n          type=\"text\"\n          name=\"filter\"\n          onChange={event => handleFilter(event.target.value)}\n        />\n      </label>\n      <label>\n        <select\n          onChange={event => handleSelect(event.target.value)}\n        >\n          <option value=\"All\">\n            Choose a type\n          </option>\n          <option value=\"Completed\">\n            Completed\n          </option>\n          <option value=\"Not completed\">\n            Not completed\n          </option>\n        </select>\n      </label>\n    </form>\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(item => (\n          <li\n            className=\"TodoList__item TodoList__item--unchecked\"\n            key={item.id}\n          >\n            <label>\n              <input\n                type=\"checkbox\"\n                readOnly\n                checked={item.completed}\n                onChange={() => onChecked(item.id)}\n              />\n              <p>{item.title}</p>\n            </label>\n\n            <button\n              className=\"\n            TodoList__user-button\n            TodoList__user-button--selected\n            button\n          \"\n              type=\"button\"\n              onClick={() => viewUser(item.userId)}\n            >\n              User&nbsp;#\n              {item.userId}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      completed: PropTypes.bool,\n    }).isRequired,\n  ).isRequired,\n  viewUser: PropTypes.func.isRequired,\n  handleFilter: PropTypes.func.isRequired,\n  handleSelect: PropTypes.func.isRequired,\n  onChecked: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './CurrentUser.scss';\nimport PropTypes from 'prop-types';\n\nimport { getUser } from '../../api';\n\nexport class CurrentUser extends React.Component {\n  state = {\n    currentUser: {},\n  }\n\n  componentDidMount() {\n    this.loadUser();\n  }\n\n  componentDidUpdate() {\n    const { currentUser } = this.state;\n\n    if (currentUser.id === this.props.userId) {\n      return;\n    }\n\n    this.loadUser();\n  }\n\n  loadUser = async() => {\n    const { userId } = this.props;\n    const user = await getUser(userId);\n\n    if (!user) {\n      return;\n    }\n\n    this.setState(state => ({\n      currentUser: user.data,\n    }));\n  }\n\n  render() {\n    const { currentUser } = this.state;\n    const { userId, clearUser } = this.props;\n\n    return (\n      <div className=\"CurrentUser\">\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user:\n            {userId}\n          </span>\n        </h2>\n        <h3 className=\"CurrentUser__name\">{currentUser.name}</h3>\n        <p className=\"CurrentUser__email\">{currentUser.email}</p>\n        <p className=\"CurrentUser__phone\">{currentUser.phone}</p>\n        <button\n          type=\"button\"\n          onClick={() => clearUser()}\n        >\n          Clear\n        </button>\n      </div>\n    );\n  }\n}\n\nCurrentUser.propTypes = {\n  userId: PropTypes.number.isRequired,\n  clearUser: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { getAll } from './api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\n\nclass App extends React.Component {\n  state = {\n    todosFromServer: [],\n    todosForFilter: [],\n    todos: [],\n    selectedUserId: 0,\n  };\n\n  componentDidMount = async() => {\n    const getTodos = await getAll();\n\n    this.setState({\n      todosFromServer: getTodos.data\n        .filter(item => item.title && item.id && item.userId),\n\n      todosForFilter: getTodos.data\n        .filter(item => item.title && item.id && item.userId),\n\n      todos: getTodos.data.filter(item => item.title && item.id && item.userId),\n\n    });\n  }\n\n  handleSelect = (event) => {\n    if (event === 'Completed') {\n      this.setState(prevState => ({\n        todos: prevState.todosFromServer.filter(item => item.completed),\n        todosForFilter: prevState.todosFromServer\n          .filter(item => item.completed),\n      }));\n    } else if (event === 'Not completed') {\n      this.setState(prevState => ({\n        todos: prevState.todosFromServer.filter(item => !item.completed),\n        todosForFilter: prevState.todosFromServer\n          .filter(item => !item.completed),\n      }));\n    } else {\n      this.setState(prevState => ({\n        todos: prevState.todosFromServer,\n        todosForFilter: prevState.todosFromServer,\n      }));\n    }\n  }\n\n  handleFilter = (event) => {\n    this.setState(prevState => ({\n      todos: prevState.todosForFilter\n        .filter(item => (item.title).includes(event)),\n    }));\n  }\n\n  viewUser = (event) => {\n    this.setState({\n      selectedUserId: event,\n    });\n  }\n\n  clearUser = () => {\n    this.setState({\n      selectedUserId: 0,\n    });\n  }\n\n  handleChecked = (todoId) => {\n    this.setState(state => ({\n      todos: state.todos.map((todo) => {\n        if (todo.id !== todoId) {\n          return todo;\n        }\n\n        return {\n          ...todo,\n          completed: !todo.completed,\n        };\n      }),\n    }));\n  }\n\n  render() {\n    const { todos, selectedUserId } = this.state;\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          <TodoList\n            todos={todos}\n            handleSelect={this.handleSelect}\n            handleFilter={this.handleFilter}\n            viewUser={this.viewUser}\n            onChecked={this.handleChecked}\n          />\n        </div>\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                userId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}